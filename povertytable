# -----------------------------------------------------------
# this function reads headers.txt and returns a dictionary relating the table id to the topic
#-------------------------------------------------------------
def read_headers():
	ins  = open( "/home/bigboy/UCSD-PRJ/UCSD-GOHS-DNHS/data/headers.txt", "r" )
	
	dict = {}
	for line in ins:
		# print line
		line = line.rstrip()
		line = line.lstrip()
		id, title = line.split(" ", 1)
		# print "Id: "  +  id  +  " Title:"  +  title
		dict[id] = title
	# print str(dict)
	return dict

# -----------------------------------------------------------
# this function displays the data of w1010.txt by creating a dataframe
#-------------------------------------------------------------
def process_id_data(dict, data):
	data = {'l5apm' : ['8,124,750', '5,781,437', '870,474', '52,823', '372,126', '11,909', '644,919', '391,062', '4,912,010', '1,650,380'],
'l5apf' : ['7,730,556', '5,460,893', '837,591', '50,273', '361,377', '10,800', '625,520', '384,102', '4,641,844', '1,575,815'],
'l5bpm' : ['2,136,253', '1,073,195', '585,182', '32,976', '44,183', '3,910', '290,502', '106,305', '707,891', '701,831'],
'l5bpf' : ['2,075,092', '1,041,579', '551,146', '33,825', '45,907', '2,782', '289,865', '109,988', '681,895', '692,847'],
'e5apm' : ['1,583,450', '1,131,044', '168,236', '10,673', '82,130', '2,976', '122,933', '65,458', '977,299', '298,539'],
'e5apf' : ['1,533,184', '1,091,708', '171,386', '11,267', '75,425', '3,476', '113,734', '66,188', '936,966', '290,371'],
'e5bpm' : ['385,126', '186,769', '108,770', '5,653', '10,257', '1,050', '55,516', '17,111', '126,239', '125,909'],
'e5bpf' : ['1,533,184', '1,091,708', '171,386', '11,267', '75,425', '3,476', '113,734', '66,188', '936,966', '290,371'],
'e6t11apm' : ['9,826,029', '7,093,098', '1,117,430', '70,949', '415,803', '15,344', '726,185', '387,220', '6,198,078', '1,740,584'], 
'e6t11apf' : ['9,826,029', '7,093,098', '1,117,430', '70,949', '415,803', '15,344', '726,185', '387,220', '6,198,078', '1,740,584'],
'e6t11bpm' : ['2,163,621', '1,064,549', '620,841', '34,363', '54,408', '4,635', '297,523', '87,302', '728,139', '671,731'],
'e6t11bpf' : ['2,065,419', '1,015,314', '590,269', '37,019', '50,355', '3,172', '285,543', '83,747', '687,626', '650,558'],
'e12t14apm' : ['5,274,889', '3,814,072', '666,120', '41,852', '206,967', '8,377', '361,529', '175,972', '3,363,972', '868,186'],
'e12t14apf' : ['5,016,647', '3,630,751', '621,008', '36,466', '201,138', '8,238', '345,798', '173,248', '3,209,563', '820,863'],
'e12t14bpm' : ['1,023,276', '501,228', '310,786', '19,273', '28,289', '1,818', '131,150', '30,732', '342,318', '306,797'],
'e12t14bpf' : ['999,457', '472,357', '317,525', '17,969', '28,506', '1,447', '128,596', '33,057', '321,364', '293,242'],
'e15apm' : ['1,839,710', '1,349,552', '226,732', '13,620', '71,940', '2,763', '118,526', '56,577', '1,199,010', '288,286'],
'e15apf' : ['1,750,160', '1,267,748', '223,320', '12,977', '66,132', '2,382', '124,676', '52,925', '1,130,101', '280,090'],
'e15bpm' : ['367,771', '189,724', '102,201', '8,120', '10,810', '865', '45,075', '10,976', '138,222', '102,123'],
'e15bpf' : ['358,371', '180,292', '104,960', '5,859', '10,822', '1,077', '43,874', '11,487', '132,600', '96,376'],
'e16t17apm' : ['3,680,230', '2,683,914', '464,400', '28,670', '147,001', '5,493', '240,135', '110,617', '2,404,620', '553,116'],
'e16t17apf' : ['3,477,385', '2,524,985', '449,018', '29,944', '134,049', '4,426', '227,138', '107,825', '2,266,581', '517,686'],
'e16t17bpm' : ['665,706', '343,668', '188,344', '13,278', '19,223', '1,569', '81,736', '17,888', '256,296', '178,851'],
'e16t17bpf' : ['675,670', '339,015', '197,505', '13,606', '21,499', '1,939', '82,356', '19,750', '253,235', '177,461'],
'e18t24apm' : ['11,188,848', '8,016,626', '1,388,858', '98,983', '451,602', '23,575', '954,059', '255,145', '6,907,395', '2,146,333'], 
'e18t24apf' : ['9,828,439', '7,006,968', '1,292,752', '86,132', '425,514', '18,146', '749,720', '249,207', '6,142,866', '1,695,340'], 
'e18t24bpm' : ['2,496,993', '1,598,221', '458,151', '36,397', '129,233', '5,083', '216,159', '53,749', '1,348,231', '486,824'],
'e18t24bpf' : ['3,286,651', '2,084,445', '650,405', '45,267', '137,267', '6,823', '290,954', '71,490', '1,771,502', '632,717'],
'e25t34apm' : ['17,570,467', '12,597,846', '1,833,959', '127,876', '1,002,971', '32,973', '1,676,149', '298,693', '10,758,683', '3,633,259'],
'e25t34apf' : ['16,332,308', '11,691,681', '1,900,995', '115,666', '1,061,558', '30,801', '1,242,022', '289,585', '10,313,806', '2,709,411'],
'e25t34bpm' : ['1,978,952', '1,179,870', '341,928', '30,228', '97,360', '4,876', '284,145', '40,545', '861,546', '621,734'],
'e25t34bpf' : ['3,228,670', '1,828,245', '755,733', '50,208', '121,482', '4,675', '403,898', '64,429', '1,384,349', '878,517'],
'e35t44apm' : ['19,613,054', '14,774,365', '2,030,731', '126,568', '1,051,116', '27,773', '1,352,125', '250,376', '13,242,455', '2,972,367'],
'e35t44apf' : ['19,255,157', '14,359,307', '2,279,493', '127,617', '1,095,665', '29,583', '1,103,777', '259,715', '13,029,318', '2,514,096'],
'e35t44bpm' : ['1,786,147', '1,095,746', '328,946', '32,704', '80,684', '3,483', '215,314', '29,270', '858,821', '467,368'],
'e35t44bpf' : ['2,605,408', '1,509,159', '610,492', '44,042', '96,045', '5,284', '295,430', '44,956', '1,195,800', '630,782'],
'e45t54apm' : ['19,310,620', '15,451,379', '1,843,144', '122,997', '800,948', '23,856', '851,874', '216,422', '14,412,790', '1,957,045'],
'e45t54apf' : ['19,827,619', '15,580,218', '2,145,446', '135,318', '912,367', '22,978', '795,829', '235,463', '14,577,320', '1,861,965'],
'e45t54bpm' : ['1,679,105', '1,068,165', '363,128', '30,113', '68,041', '2,043', '119,738', '27,877', '932,127', '268,754'],
'e45t54bpf' : ['2,108,877', '1,272,769', '521,674', '36,140', '75,757', '3,607', '160,330', '38,600', '1,097,713', '351,432'],
'e55t64apm' : ['13,889,235', '11,584,490', '1,140,485', '81,151', '522,666', '13,484', '416,685', '130,274', '10,998,022', '1,040,827'],
'e55t64apf' : ['14,707,059', '12,043,632', '1,387,399', '88,975', '605,131', '15,608', '422,516', '143,798', '11,420,562', '1,082,424'],
'e55t64bpm' : ['1,187,001', '829,420', '218,025', '17,388', '38,737', '1,187', '65,192', '17,052', '746,171', '156,697'],
'e55t64bpf' : ['1,597,289', '1,063,154', '327,197', '21,534', '60,929', '2,185', '97,178', '25,112', '937,872', '232,636'],
'e65t74apm' : ['7,969,047', '6,811,964', '598,239', '42,619', '275,234', '6,859', '169,960', '64,172', '6,494,038', '504,695'],
'e65t74apf' : ['9,094,435', '7,636,036', '786,832', '43,632', '336,225', '6,483', '207,711', '77,516', '7,264,354', '598,160'],
'e65t74bpm' : ['587,221', '396,899', '109,312', '6,285', '33,283', '302', '34,477', '6,663', '341,768', '93,435'],
'e65t74bpf' : ['1,035,445', '692,669', '218,586', '12,059', '43,816', '973', '55,066', '12,276', '598,506', '154,841'],
'g75apm' : ['6,086,903', '5,429,790', '346,024', '20,610', '163,867', '2,677', '88,249', '35,686', '5,228,375', '299,462'],
'g75apf' : ['8,903,484', '7,862,463', '574,812', '26,780', '243,024', '4,055', '137,881', '54,469', '7,570,922', '444,757'],
'g75bpm' : ['506,388', '379,788', '71,889', '2,937', '25,831', '398', '20,800', '4,745', '332,517', '70,517'],
'g75bpf' : ['1,387,537', '1,062,776', '217,321', '12,060', '39,453', '744', '43,261', '11,922', '976,358', '134,962']}
	frame = pd.DataFrame(data, columns = [ 'l5apm', 
        'l5apf',
        'l5bpm',
        'l5bpf',
        'e5apm',
        'e5apf',
        'e5bpm',
        'e5bpf',
        'e6t11apm',
        'e6t11apf',
        'e6t11bpm',
        'e6t11bpf',
        'e12t14apm',
        'e12t14apf',
        'e12t14bpm',
        'e12t14bpf',
        'e15apm',
        'e15apf',
        'e15bpm',
        'e15bpf',
        'e16t17apm',
        'e16t17apf',
        'e16t17bpm',
        'e16t17bpf', 
        'e18t24apm', 
        'e18t24apf', 
        'e18t24bpm', 
        'e18t24bpf', 
        'e25t34apm', 
        'e25t34apf', 
        'e25t34bpm', 
        'e25t34bpf', 
        'e35t44apm', 
        'e35t44apf', 
        'e35t44bpm', 
        'e35t44bpf', 
        'e45t54apm', 
        'e45t54apf', 
        'e45t54bpm', 
        'e45t54bpf', 
        'e55t64apm',
        'e55t64apf',
        'e55t64bpm',
        'e55t64bpf',
        'e65t74apm',
        'e65t74apf',
        'e65t74bpm',
        'e65t74bpf',
        'g75apm',
        'g75apf',
        'g75bpm',
        'g75bpf'],
index = ['total', 'white', 'african american', 'native american', 'asian', 'pacific islander', 'other race', 'two or more races', 'white alone', 'hispanic'])


	print frame

# -----------------------------------------------------------
# this function reads w1010.txt and processes the data
#-------------------------------------------------------------
def read_data(dict):

	current_id = "doesnotexist " 
	malebp = []
	femalebp = []
	maleap = []
	femaleap = []
	l5apm = []
	l5apf = []
	l5bpm = []
	l5bpf = []
	e5apm = []
	e5apf = []
	e5bpm = []
	e5bpf = []
	e6t11apm = []
	e6t11apf = []
	e6t11bpm = []
	e6t11bpf = []
	e12t14apm = []
	e12t14apf = []
	e12t14bpm = []
	e12t14bpf = []
	e15apm = []
	e15apf = []
	e15bpm = []
	e15bpf = []
	e16t17apm = []
	e16t17apf = []
	e16t17bpm = []
	e16t17bpf = []
	e18t24apm = []
	e18t24apf = []
	e18t24bpm = []
	e18t24bpf = []
	e25t34apm = []
	e25t34apf = []
	e25t34bpm = []
	e25t34bpf = []
	e35t44apm = []
	e35t44apf = []
	e35t44bpm = []
	e35t44bpf = []
	e45t54apm = []
	e45t54apf = []
	e45t54bpm = []
	e45t54bpf = []
	e55t64apm = []
	e55t64apf = []
	e55t64bpm = []
	e55t64bpf = []
	e65t74apm = []
	e65t74apf = []
	e65t74bpm = []
	e65t74bpf = []
	g75apm = []
	g75apf = []
	g75bpm = []
	g75bpf = []
	ans = open( "/home/bigboy/UCSD-PRJ/UCSD-GOHS-DNHS/data/w1010.txt", "r" )
	for i, line in enumerate(ans):
		if i > 589:
			break
		line = line.strip()
                line = line.rstrip()
                line = line.lstrip()
                items = line.split("|")
                for i in range(len(items)):
                        items[i] = items[i].strip() 
		if items[3] == "1":
			current_id = items[2]
			print dict[current_id] 
			print "The total population is " + items[5]
		elif items[3] == "2":
			print "The population below poverty level is " + items[5]
		elif items[3] == "31":
			print "The population at or above poverty level is " + items[5]
		else: 
			if items[3] == "4":
				l5bpm.append(items[5])
			if items[3] == "5":
				e5bpm.append(items[5])
			if items[3] == "6":
				e6t11bpm.append(items[5])
			if items[3] == "7":
				e12t14bpm.append(items[5])
			if items[3] == "8":
				e15bpm.append(items[5])
			if items[3] == "9":
				e16t17bpm.append(items[5])
			if items[3] == "10":
				e18t24bpm.append(items[5])
			if items[3] == "11":
				e25t34bpm.append(items[5])
			if items[3] == "12":
				e35t44bpm.append(items[5])
			if items[3] == "13":
				e45t54bpm.append(items[5])
			if items[3] == "14":
				e55t64bpm.append(items[5])
			if items[3] == "15":
				e65t74bpm.append(items[5])
			if items[3] == "16":
				g75bpm.append(items[5])
			if items[3] == "18":
				l5bpf.append(items[5])
			if items[3] == "19":
				e5bpf.append(items[5])
			if items[3] == "20":
				e6t11bpf.append(items[5])
			if items[3] == "21":
				e12t14bpf.append(items[5])
			if items[3] == "22":
				e15bpf.append(items[5])
			if items[3] == "23":
				e16t17bpf.append(items[5])
			if items[3] == "24":
				e18t24bpf.append(items[5])
			if items[3] == "25":
				e25t34bpf.append(items[5])
			if items[3] == "26":
				e35t44bpf.append(items[5])
			if items[3] == "27":
				e45t54bpf.append(items[5])
			if items[3] == "28":
				e55t64bpf.append(items[5])
			if items[3] == "29":
				e65t74bpf.append(items[5])
			if items[3] == "30":
				g75bpf.append(items[5])
			if items[3] == "33":
				l5apm.append(items[5])
			if items[3] == "34":
				e5apm.append(items[5])
			if items[3] == "35":
				e6t11apm.append(items[5])
			if items[3] == "36":
				e12t14apm.append(items[5])
			if items[3] == "37":
				e15apm.append(items[5])
			if items[3] == "38":
				e16t17apm.append(items[5])
			if items[3] == "39":
				e18t24apm.append(items[5])
			if items[3] == "40":
				e25t34apm.append(items[5])
			if items[3] == "41":
				e35t44apm.append(items[5])
			if items[3] == "42":
				e45t54apm.append(items[5])
			if items[3] == "43":
				e55t64apm.append(items[5])
			if items[3] == "44":
				e65t74apm.append(items[5])
			if items[3] == "45":
				g75apm.append(items[5])
			if items[3] == "47":
				l5apf.append(items[5])
			if items[3] == "48":
				e5apf.append(items[5])
			if items[3] == "49":
				e6t11apf.append(items[5])
			if items[3] == "50":
				e12t14apf.append(items[5])
			if items[3] == "51":
				e15apf.append(items[5])
			if items[3] == "52":
				e16t17apf.append(items[5])
			if items[3] == "53":
				e18t24apf.append(items[5])
			if items[3] == "54":
				e25t34apf.append(items[5])
			if items[3] == "55":
				e35t44apf.append(items[5])
			if items[3] == "56":
				e45t54apf.append(items[5])
			if items[3] == "57":
				e55t64apf.append(items[5])
			if items[3] == "58":
				e65t74apf.append(items[5])
			if items[3] == "59":
				g75apf.append(items[5])
			if int(items[3]) <= 16:
				malebp.append(items[5])
			elif int(items[3]) <= 30:
				femalebp.append(items[5])
			elif int(items[3]) <= 45:
				maleap.append(items[5])
			else:
				femaleap.append(items[5])
	#print "Male below poverty data: " + str(malebp) 
	#print "Female below poverty data: " + str(femalebp)
	#print "Male above poverty data: " + str(maleap)
	#print "Female above poverty data: " + str(femaleap)
	#print "l5apm = " + str(l5apm)
        #print "l5apf = " + str(l5apf)
        #print "l5bpm = " + str(l5bpm) 
        #print "l5bpf = " + str(l5bpf)
        #print "e5apm = " + str(e5apm) 
        #print "e5apf = " + str(e5apf) 
        #print "e5bpm = " + str(e5bpm) 
        #print "e5apf = " + str(e5apf)
        #print "e6t11apm = " + str(e6t11apm)
        #print "e6t11apf = " + str(e6t11apm)
        #print "e6t11bpm = " + str(e6t11bpm)
        #print "e6t11bpf = " + str(e6t11bpf) 
        #print "e12t14apm = " + str(e12t14apm)
        #print "e12t14apf = " + str(e12t14apf) 
        #print "e12t14bpm = " + str(e12t14bpm)
        #print "e12t14bpf = " + str(e12t14bpf)
        #print "e15apm = " + str(e15apm)
        #print "e15apf = " + str(e15apf)
        #print "e15bpm = " + str(e15bpm)
        #print "e15bpf = " + str(e15bpf)
        #print "e16t17apm = " + str(e16t17apm)
        #print "e16t17apf = " + str(e16t17apf)
        #print "e16t17bpm = " + str(e16t17bpm)
        #print "e16t17bpf = " + str(e16t17bpf)
        #print "e18t24apm = " + str(e18t24apm)
        #print "e18t24apf = " + str(e18t24apf)
        #print "e18t24bpm = " + str(e18t24bpm)
        #print "e18t24bpf = " + str(e18t24bpf)
        #print "e25t34apm = " + str(e25t34apm)
        #print "e25t34apf = " + str(e25t34apf)
        #print "e25t34bpm = " + str(e25t34bpm)
        #print "e25t34bpf = " + str(e25t34bpf)
        #print "e35t44apm = " + str(e35t44apm)
        #print "e35t44apf = " + str(e35t44apf)
        #print "e35t44bpm = " + str(e35t44bpm)
        #print "e35t44bpf = " + str(e35t44bpf)
        #print "e45t54apm = " + str(e45t54apm)
        #print "e45t54apf = " + str(e45t54apf)
        #print "e45t54bpm = " + str(e45t54bpm)
        #print "e45t54bpf = " + str(e45t54bpf)
        #print "e55t64apm = " + str(e55t64apm)
        #print "e55t64apf = " + str(e55t64apf)
        #print "e55t64bpm = " + str(e55t64bpm)
        #print "e55t64bpf = " + str(e55t64bpf)
        #print "e65t74apm = " + str(e65t74apm)
        #print "e65t74apf = " + str(e65t74apf)
        #print "e65t74bpm = " + str(e65t74bpm)
        #print "e65t74bpf = " + str(e65t74bpf)
        #print "g75apm = " + str(g75apm)
        #print "g75apf = " + str(g75apf)
        #print "g75bpm = " + str(g75bpm)
        #print "g75bpf = " + str(g75bpf)

	return malebp
	return femalebp
	return maleap
	return femaleap
	ans.close()



#-------------------------------------------------------------------
# MAIN
#-------------------------------------------------------------------
import pandas as pd
dict = read_headers()
data = read_data(dict)
read_data(dict)
process_id_data(dict, data)
